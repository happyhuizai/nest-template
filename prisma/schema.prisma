datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum MenuType {
  DIRECTORY
  MENU
}

// 部门（Departments）
model Department {
  id        Int        @id @default(autoincrement())
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt()
  isDeleted Boolean    @default(false)
  name      String
  positions Position[] // 一个部门可以有多个职位
}

// 职位（Positions）
model Position {
  id           Int        @id @default(autoincrement())
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt()
  isDeleted    Boolean    @default(false)
  name         String
  department   Department @relation(fields: [departmentId], references: [id])
  departmentId Int // 外键，指向部门表的ID
  users        User[] // 一个职位可以有多个员工
  roles        Role[] // 一个职位可以有多个角色
}

// 员工（Users）
model User {
  id        Int        @id @default(autoincrement())
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt()
  isDeleted Boolean    @default(false)
  username  String     @unique
  email     String     @unique
  positions Position[] // 一个员工可以拥有多个职位
}

// 角色（Roles）
model Role {
  id          Int          @id @default(autoincrement())
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt()
  isDeleted   Boolean      @default(false)
  name        String
  positions   Position[] // 一个角色可以对应多个职位
  permissions Permission[] // 一个角色可以拥有多个权限
}

// 权限（Permissions）
model Permission {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
  isDeleted Boolean  @default(false)
  name      String   @unique()
  roles     Role[] // 多个角色可以拥有同一权限
  menus     Menu[] // 一个权限可以对应多个菜单
  policies  Policy[] // 一个权限可以对应多个策略
}

// 菜单（Menus）
model Menu {
  id          Int          @id @default(autoincrement())
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt()
  isDeleted   Boolean      @default(false)
  name        String
  type        MenuType // 菜单的类型
  icon        String?
  order       Int?
  route       String?
  component   String?
  keepAlive   Boolean?
  hidden      Boolean?     @default(false)
  outlink     String?
  parentId    Int?
  permissions Permission[] // 一个菜单可以对应多个权限
}

// 策略（Policies）
model Policy {
  id          Int          @id @default(autoincrement())
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt()
  isDeleted   Boolean      @default(false)
  action      String // 策略的动作
  subject     String // 策略的主题
  permissions Permission[] // 一个策略可以对应多个权限
}
